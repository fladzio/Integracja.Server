@using Integracja.Server.Web.Areas.Gry.Models.Home
@using static Integracja.Server.Web.Areas.Gry.Models.Home.HomeViewModel
@using static Integracja.Server.Web.Areas.Gry.Models.Home.IHomeActions
@model HomeViewModel

@section Styles
{
    <link rel="stylesheet" href="~/css/Shared/TableCardLayout.css" />
}

@section Scripts
{
    <script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.10.24/js/jquery.dataTables.js"></script>
    <script src="~/js/Shared/DataTables.js"></script>
    <script src="~/js/Shared/TableCardLayout.js"></script>
    <script src="~/js/Shared/CountdownTimer.js"></script>
}

@{ await Html.RenderPartialAsync("~/Views/Shared/Alerts/_AlertsList.cshtml", Model.Alerts);}

<h2>Gry</h2>
<br />

<div class="table-wrapper-scroll-y">
    <table class="table data-table table-card-layout">
        <thead>
            <tr>
                <th scope="col">Nazwa gry: </th>
                <th scope="col">Status: </th>
                <th scope="col">Rozpoczęcie: </th>
                <th scope="col">Czas trwania: </th>
                <th scope="col">Akcje: </th>
            </tr>
        </thead>

        @{
            var now = DateTime.Now;
            string expiredText = "W trakcie!";
        }

        <tbody id="countdown_timer_data" data-expired-text="@expiredText" data-prefix-text="Start za ">

            @for (int i = 0; i < Model.Games.Count; ++i)
            {
            <tr>
                <td>@Model.Games[i].Settings.Name</td>

                @*status*@
                @if (now < Model.Games[i].Settings.StartTime) // przed startem
                {

                    // konwersja dla js
                    var t = Model.Games[i].Settings.StartTime.ToUniversalTime().Subtract(new DateTime(1970, 1, 1)).TotalMilliseconds;

                    <td class="countdown-timer" data-countdown-date="@t">
                        Oczekująca @* z jsem będzie wyświetlony timer do rozpoczęcia albo "w trakcie" *@
                    </td>
                }
                else if (now < Model.Games[i].Settings.EndTime)
                {
                    <td>
                        @expiredText
                    </td>
                }
                else
                {
                    <td>
                        Gra zakończona
                    </td>
                }

                @* rozpoczęcie *@
                <td>@Model.Games[i].Settings.StartTime</td>

                @*czas trwania*@
                <td>@Model.Games[i].Settings.DurationString</td>

                @*akcje*@
                <td>
                    <a asp-action="@nameof(IHomeActions.GotoGameRead)" asp-route-gameId="@Model.Games[i].Id">Szczegóły</a>
                    @if (Model.Games[i].Settings.EndTime < now)
                    {
                        @Html.Raw(" | ")
                        <a asp-action="@nameof(IHomeActions.GotoGameHistory)" asp-route-gameId="@Model.Games[i].Id">Historia</a>
                    }
                    @if (Model.Games[i].Settings.StartTime > now)
                    {
                        @Html.Raw(" | ")
                        <a asp-action="@nameof(IHomeActions.GotoGameUpdate)" asp-route-gameId="@Model.Games[i].Id">Edytuj</a>@Html.Raw(" | ")
                        <a asp-action="@nameof(IHomeActions.GotoGameDelete)" asp-route-gameId="@Model.Games[i].Id">Anuluj</a>
                    }
                </td>

            </tr>
            }


        </tbody>
    </table>
</div>

<br />

<div>
    <a class="btn btn-primary"
       asp-action="@nameof(IHomeActions.GotoGameCreate)">
        Stwórz nową grę
    </a>
</div>

