@using Integracja.Server.Web.Areas.Gry.Models.Shared
@using static Integracja.Server.Web.Models.Shared.Time.TimeHelper
@model GameCardViewModel


<div class="card-body">

    <div class="text-center">

        <h2 class="card-title">@Model.Game.Settings.Name</h2>
        <br />

        <div class="row">
            <div class="col-lg-4">
                <h3>Czas rozpoczęcia</h3>
                <p class="card-text">
                    @Model.Game.Settings.StartDateTime.ToLocalTime()
                </p>
            </div>

            <div class="col-lg-4">
                @{
                    DateTime now = DateTime.Now;
                    string expiredText = "W trakcie!";
                }
                <h3 id="countdown_timer_data" data-expired-text="@expiredText" data-prefix-text="Start za ">
                    Status
                </h3>
                @if (now < Model.Game.Settings.StartDateTime) // przed startem
                {

                    // konwersja dla js
                    var t = Model.Game.Settings.StartDateTime.ToUniversalTime().Subtract(new DateTime(1970, 1, 1)).TotalMilliseconds;

                    <p class="card-text countdown-timer" data-countdown-date="@t">
                        Oczekująca @* z jsem będzie wyświetlony timer do rozpoczęcia albo "w trakcie" *@
                    </p>
                }
                else if (now < Model.Game.Settings.EndDateTime)
                {
                    <p class="card-text">
                        @expiredText
                    </p>
                }
                else
                {
                    <p class="card-text">
                        Gra zakończona
                    </p>
                }
            </div>

            <div class="col-lg-4">
                <h3>Czas zakończenia</h3>
                <p class="card-text">
                    @Model.Game.Settings.EndDateTime.ToLocalTime()
                </p>
            </div>
        </div>
        <br />

        <h3>Maksymalna liczba graczy</h3>

        @{
            var playerCount = @Model.Game.Settings.MaxPlayersCount;
            string playerCountText = playerCount.ToString();
            if (playerCount == 0)
                playerCountText = "Nieograniczona";
        }

        <p class="card-text">
            @playerCountText
        </p>

        <h3 class="card-text">Tryb gry @Model.Game.Settings.Gamemode.Name:</h3>
        <br />

        <p>
            Liczba żyć:
            @Model.Game.Settings.Gamemode?.NumberOfLives
            <br />
            Czas na cały quiz:
            @if (Model.Game.Settings.Gamemode.TimeForFullQuiz != null)
                ReadableSeconds(Model.Game.Settings.Gamemode.TimeForFullQuiz.Value);

            <br />
                Czas na jedno pytanie:
            @if(Model.Game.Settings.Gamemode.TimeForOneQuestion != null)
                @ReadableSeconds(Model.Game.Settings.Gamemode.TimeForOneQuestion.Value)
            <br />

        </p>
        <br />

        <h3>Kod zaproszeniowy</h3>
        <div id="qrCode" style="display: inline-block"></div>
        <br />
        <br />

        <h3>Pytania</h3>
        <br />

    </div>

    <div class="container">
        @foreach (var question in Model.Game.QuestionPool)
        {
            <div class="container border-bottom">
                @{ await Html.RenderPartialAsync("~/Areas/Pytania/Views/Shared/_QuestionItem.cshtml", question); }
            </div>
            <br />
        }
    </div>
</div>

<script type="text/javascript" src="~/lib/qrcode/qrcode.min.js"></script>
<script type="text/javascript">
        new QRCode(document.getElementById("qrCode"),
            {
                text: "@Html.Raw(Model.Game.Guid)",
                width: 250,
                height: 250
            });
</script>